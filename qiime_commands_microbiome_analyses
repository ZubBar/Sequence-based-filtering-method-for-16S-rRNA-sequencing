--> Qiime v1.9.1 (commands from http://qiime.org/scripts/)

1. Analyses of taxonomic distribution

a. Use the open-reference OTU picking command for sequence clustering and OTU assigment (if you aim to use any other database for taxonomy assigment define a parameter file, see http://www.qiime.org/documentation/file_formats.html#qiime-parameters)

 pick_open_reference_otus.py 
	-i $PWD/seqs.fna 
	-p params.txt
	-o $PWD/pick_open_ref &
	
b. Retain those OTUs that show a minimum total observation count of 10 (n=10)

filter_otus_from_otu_table.py 
	-i $PWD/otu_table_mc2_w_tax_no_pynast_failures.biom 
	-n 10
	-o $PWD/otu_table_n10.biom 

c. Estimate the fraction of the total observation (sequence) count to apply as the minimum total observation count of an OTU to be retained. Eg.: 0.2% 

filter_otus_from_otu_table.py 
	-i $PWD/otu_table_n10.biom  
	--min_count_fraction 0.002
	-o $PWD/otu_table_n10_mFr02.biom
	
d. If you aim to group your samples regarding any variable of your study: collapse your samples
	
collapse_samples.py 
	-b $PWD/otu_table_n10_mFr02.biom 
	-m $PWD/Mapping_file.txt 
	--output_biom_fp $PWD/collapsed_normed.biom 
	--output_mapping_fp $PWD/collapsed_map.txt .
	--collapse_mode "choose your mode (median/mean)" 
	--collapse_fields "choose your variable" 
	--normalize
	
e. Bacterial taxonomic distribution bar plots (if you would like to have your samples sorted use option -s)

summarize_taxa_through_plots.py 
	-i $PWD/collapsed_normed.biom 
	-o $PWD/taxa 
	-s
	
2. Filter samples from your data set

filter_samples_from_otu_table.py 
	-i $PWD/otu_table_n10_mFr02.biom 
	-m $PWD/Mapping_file.txt 
	-s 'define your variable'
	-o $PWD/otu_table_n10_mFr02_Variable.biom 
	
3. alpha_diversity 

alpha_rarefaction.py 
	-i $PWD/otu_table_n10_mFr02.biom
	-m $PWD/Mapping_file.txt   
	-t rep_set.tre &
	-e "define the upper limit of rarefraction depths"
	-o alpha_diversity
	
4. beta_diversity

beta_diversity_through_plots.py 
	-i $PWD/otu_table_n10_mFr02.biom     
	-t rep_set.tre
	-m $PWD/Mapping_file.txt
	-e "define sequencing depth"
	-o $PWD/beta_diversity
	
make 2d plots (optional)
make_2d_plots.py 
	-i $PWD/beta_diversity/(un)weighted_unifrac_pc.txt 
	-m $PWD/Mapping_file.txt
	-b 'define your variable if desired' 
	-o $PWD/2d_plots 
 
perform a statistical test (optional)
compare_categories.py 
	-i $PWD/beta_diversity/(un)weighted_unifrac_dm.txt 
	-m $PWD/Mapping_file.txt
	-c 'define your variable' -o permanova_stats 
	--method "choose your statistical test:permanova/anosim/adonis/permdisp/db-RDA...see http://qiime.org/scripts/compare_categories.html)
	-o $PWD/statistic
	
(suggestion: perform permdisp statistical test before premanova to test for group dispersion homogeneity)

5. Compare OTU frequencies across sample groups (statistical test eg.: kruskal wallis)

group_significance.py 
	-i $PWD/otu_table_n10_mFr02_L6.biom 
	-m $PWD/Mapping_file.txt 
	-c "define your variable" 
	-s "choose your statistical test" 
	-o $PWD/statistical_test.txt
  
For more detailed information about this pipeline referred to "Caporaso, J., Kuczynski, J., Stombaugh, J. et al. QIIME allows analysis of high-throughput community sequencing data. Nat Methods 7, 335â€“336 (2010). https://doi.org/10.1038/nmeth.f.303"

6. SparCC pipeline adaptation from Jonathan Friedman (https://github.com/JCSzamosi/SparCC3) 

a. Correlation between all OTUs_quantification

python SparCC.py $PWD/taxa/otu_table_n10_mFr02_L7.txt -c sparcc_cor.txt -v sparcc_cov.txt

b. Pseudo p-value calculation via bootstrap 

python MakeBootstraps.py $PWD/taxa/otu_table_n10_mFr02_L7.txt -p simulated_test/ -t permuted_#

mkdir boot_corr

mkdir boot_cov

for i in `seq 0 99`; do python SparCC.py simulated/permuted_$i -c boot_corr/simulated_sparcc_$i.txt -v boot_cov/simulated_sparcc_$i.txt >> boot_sparcc.log; done

python PseudoPvals.py sparcc_cor.txt boot_corr/simulated_sparcc_#.txt 100 -o $PWD/pvalues/one_sided.txt -t one_sided (or two_sided)

For more detailed information about these calculations referred to "Friedman, J., & Alm, E. J. (2012). Inferring correlation networks from genomic survey data."
